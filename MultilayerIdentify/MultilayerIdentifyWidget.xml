<?xml version="1.0" ?>
<!--
The <layers> section contains a <layer> tag for each layer to be identifiable. The <layer> tag
has the attributes "label" to match with the layer's label in the config.xml file and "type"
to match the layer's type (dynamic or feature).  Dynamic layers have <sublayer> subtags to
indicate which of its layers are identifiable; these <sublayer> tags have the attribute "id"
to indicate the sublayer's id number.

Within the <layer> tag for feature layers or the <sublayer> tag for the sublayers of a dynamic
layer, one can put the optional display tags <caption>, <format>, and <relationship>.

If the <caption> tag is supplied, its text is used as the title of the box displaying the
items found for the layer. If omitted, the layer's name is used.

If the <format> tag is supplied, its text is used as a format specification string for
displaying the attributes for each item found for the layer. If omitted, name-value pairs are
used for all attributes except the OBJECTID attribute. The contents of the format string are
described below.

If the <relationship> tag is supplied for a layer, related items (attachments and tables,
e.g.) are sought for the found features for that layer.  These related items are displayed
according to the <caption> and <format> tags that appear within the <relationship> tag.

The <format> tag contains a specification string encased within the "<![CDATA[" prefix and
"]]>" suffix.  Between these two 'fixes, one can place arbitrary text and some HTML tags
such as <b>, <u>, and <br>; see the documentation for ActionScript's TextConverter's
TEXT_FIELD_HTML_FORMAT constant for the full list
(http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flashx/textLayout/conversion/TextConverter.html#TEXT_FIELD_HTML_FORMAT )

In addition to the arbitrary text and HTML tags, one can place fields for inserting
attribute names and values.  These fields are surrounded by braces ("{}") and begin with the
name of the attribute followed by a tilde ("~"). After the tilde, one places the keyword
"label", "value", "number", "currency", "phone", or "date".

The "label" and "value" keywords are complete: "label" will replace the whole brace field
with the name or alias of the attribute, e.g., "{NAME~label}" would be replaced with
"Station" in the format string if that were the alias for or name of the NAME attribute,
while "value" will replace the whole brace field with a Flex-specific string representation
of the value of the attribute.

The other keywords are followed by a additional specifications enclosed within parentheses
("()"):  "number" + specs will replace the whole brace field with the representation of a
number; "currency" + specs will replace the whole brace field with the representation of a
number preceded or followed by a currency symbol; "phone" + specs will replace the whole
brace field with the representation of a telephone number, including international
formatting; "date" + specs will replace the whole brace field with the representation of a
date and/or time. These additional specifications, which are separated from each other by
vertical bars ("|"), are converted to Flex Formatter options.

Numbers are formatted using the ActionScript NumberFormatter class
(http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/mx/formatters/NumberFormatter.html ),
and use five additional specifications: sign, thousands separator, decimal separator,
number of decimal places, and rounding. The specification for sign is "+" to not show a
sign even for a negative number, "-" to show a negative sign for a negative number, and
")" to use parentheses for a negative number. E.g., "{LONDD~number(+|,|.|3|nearest)}° W"
for a longitude value of -111.933333 will become "111.933° W". The thousands separator
is the character that separates groups of 1000; omit it for no separation. E.g., for an
attribute PRICE with a value of a million, "{PRICE~number(-||.|0|none)}" is converted to
"1000000" while "{PRICE~number(-|,|.|0|none)}" is converted to "1,000,000". The decimal
separator is the character that separates the whole and fractional parts of a number; it
must be different than the thousands separator. Rounding is specified using one of the
keywords "down", "nearest", "up", or "none".

Currencies are formatted using the ActionScript CurrencyFormatter class
(http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/mx/formatters/CurrencyFormatter.html ).
Their additional specifications are the same as for a number except that they add one
more specification field at the beginning to hold the currency symbol. If this symbol
is suffixed by a negative sign, the currency symbol is placed at the end of the number;
otherwise, it is placed at the beginning of the number. E.g., for an attribute PRICE
with a value of a million, "{PRICE~currency(€-|-|.|,|2|none)}" is converted to
"1.000.000,00€", while "{PRICE~currency($|-|,|.|2|none)}" is converted to
"$1,000,000.00". (Note that these examples also illustrate different thousands and
decimal separators.)

Phones are formatted using the ActionScript PhoneFormatter class
(http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/mx/formatters/PhoneFormatter.html ),
which permits characters from the set "+()#-. " to create the telephone number pattern.
E.g., the field "{PHONE~phone(+1-###-###-####)}" will show the full international
number for a US telephone number.

Dates are formatted using the ActionScript DateFormatter class
(http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/mx/formatters/DateFormatter.html#formatString ,
formatString property documentation), which uses uppercase letters to represent 
parts of a date and time. Additional arbitrary lowercase text may be included in the 
pattern; see the above link for the full description. An example format field is 
"{SUBMITDT~date(M/D/YYYY K:NN A)}", which displays something like "7/7/1984 2:05 PM" 
depending on the date and time.
-->
<configuration>
    <identifytolerance>5</identifytolerance>
    <introduction>Use the cursor to identify features on the map</introduction>
    <countdown>Map layers remaining: </countdown>
    <nofeatures>No features were found</nofeatures>
    <attachmentsTitle>Attachments</attachmentsTitle>
    <layers>
        <layer label="NHSS gages, stations, and Federal lands" type="dynamic">
            <sublayer id="0">
                <caption>Stream flow stations</caption>
                <format><![CDATA[<b><u>{STANAME~value}</u></b> ({STAID~value})<br />Located at {LONDD~number(+|,|.|3|nearest)}° N, {LATDD~number(+|,|.|3|nearest)}° W<br />At {TIME~value}, its stage was {STAGE~value} ({CLASS~value})<br />Costing  {LONDD~currency($|-|,|.|2|nearest)} & {LATDD~currency(€|-|,|.|2|nearest)} & {LONDD~currency(¥|-|,|.|2|nearest)} & {LATDD~currency(£-|)|,|.|2|nearest)}]]></format>
            </sublayer>
            <sublayer id="1">
                <caption>Weather stations</caption>
                <format><![CDATA[Weather station <b><u>{NAME~value}</u></b> ({NWS_ID~number(-|,|.|0|nearest)})<br />Located at {LATITUDE~number(-|,|.|5|nearest)}° N, {LONGITUDE~number(-|,|.|5|nearest)}° W, {ELEV~number(-|,|.|0|nearest)} ft<br />in {COUNTY~value}, {STATE~value}<br />Managed by {AGENCY~value} effective {EFF_DATE~value}]]></format>
            </sublayer>
            <sublayer id="2">
                <caption>Federal lands</caption>
                <format><![CDATA[<b>{NAME1~value}</b><br />{FEATURE1~value}<br />{STATE~value}]]></format>
            </sublayer>
        </layer>
        <layer label="Service Requests" type="feature">
            <caption>Service requests</caption>
            <format><![CDATA[<b><u>Service Request #{REQUESTID~value}</u></b><br />{REQUESTTYPE~label}: <b>{REQUESTTYPE~value}</b><br />{STATUS~label}: <b>{STATUS~value}</b><br />Issue reported by <i>{NAME~value}</i> on {REQUESTDATE~date(M/D/YYYY K:NN A)}<br />Contact information:<br /> ▪ Telephone: {PHONE~phone(+1-###-###-####)}<br /> ▪ Email: {EMAIL~value}<br />{COMMENTS~value}]]></format>
            <relationship id="1">
                <caption>Comments</caption>
                <format><![CDATA[Submitted {SUBMITDT~date(M/D/YYYY JJNN)}<br />{COMMENTS~value}<br /><i>Importance: {RANK~value}</i>]]></format>
            </relationship>
        </layer>
        <layer label="Evacuation Areas" type="feature">
            <caption>Evacuation areas</caption>
            <!-- Omitted format becomes attribute name-value pairs -->
        </layer>
        <layer label="Facilities" type="feature">
        	<!-- Omitted caption uses layer's name -->
            <format><![CDATA[{FEATURECODE~value}<br />{CITY~value}, {STATE~value}<br />{LASTUPDATE~label}: {LASTUPDATE~date(MMMM D, YYYY)}]]></format>
        </layer>
    </layers>
</configuration>