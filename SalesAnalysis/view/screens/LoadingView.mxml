<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2008-2011 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// You may freely redistribute and use this software, with or
// without modification, provided you include the original copyright
// and use restrictions.  See use restrictions in the file:
// License.txt and/or use_restrictions.txt.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:esri_stl="com.esri.stl.components.*"
		 width="100%" height="100%"
		 preinitialize="preinitializeHandler(event)"
		 addedToStage="addedToStageHandler(event)"
		 removedFromStage="removedFromStageHandler(event)">
	<s:layout>
		<s:VerticalLayout gap="20" paddingTop="20" paddingLeft="20" horizontalAlign="center" verticalAlign="middle"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			import widgets.SalesAnalysis.model.AppModel;
			import widgets.SalesAnalysis.presenter.LoadingPresenter;


			[Bindable]
			private var _presenter:LoadingPresenter;
			private var _timer:Timer = new Timer(10);
			private var _count:Number = 0;
			[Bindable]
			private var _barColor:uint = 0x00FF00;

			protected function preinitializeHandler(event:FlexEvent):void
			{
				_presenter = AppModel.getInstance().loadingPresenter;
			}

			protected function updateProgess(event:TimerEvent):void
			{
				_count++;

				progressBar.setProgress(_count,100);
				progressBar.label= "Loading..." + " " + _count + "%";
				if(_count == 100)_count = 0;
				_barColor = rgbToHex(     0xFF * ( _count / 100 ), // this is the red part
					0x00FF * ( ( 100 - _count ) / 100 ), // green
					0 ); // no blue for you!
			}
			protected function removedFromStageHandler(event:Event):void
			{
				_timer.stop();
				_timer.removeEventListener(TimerEvent.TIMER, updateProgess);
			}
			protected function addedToStageHandler(event:Event):void
			{
				_timer.addEventListener(TimerEvent.TIMER, updateProgess,false,0,true);
				_timer.start();
			}
			private function rgbToHex( R:uint, G:uint, B:uint ):uint {
				return( R << 16 | G << 8 | B );
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

		<s:Label text="{_presenter.message}" fontWeight="bold"/>
		<mx:ProgressBar id="progressBar" visible="true"
						width="75%"
						labelPlacement="center"
						minimum="0" maximum="100"
						direction="right" mode="manual"
						label="Loading... 0%"
						trackSkin="com.esri.stl.skins.CustomProgressBarTrackSkin"
						barSkin="com.esri.stl.skins.CustomProgressBarSkin"
						/>
</s:Group>
