<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2008-2011 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// You may freely redistribute and use this software, with or
// without modification, provided you include the original copyright
// and use restrictions.  See use restrictions in the file:
// License.txt and/or use_restrictions.txt.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:esri="http://www.esri.com/2008/ags"
		 xmlns:esri_stl="com.esri.stl.ags.customsymbols.*"
		 preinitialize="preinitializeHandler(event)"
		>
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;

			private var topLevelStyleManager:IStyleManager2 = FlexGlobals.topLevelApplication.styleManager;

			[Bindable]
			private var cssStyleDeclarationGlobal:CSSStyleDeclaration = topLevelStyleManager.getStyleDeclaration("global");

			[Bindable]
			private var _configModel:ConfigModel;


			protected function preinitializeHandler(event:FlexEvent):void
			{
				_configModel = ConfigModel.getInstance();
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<!-- ////////////////////////////////////////// -->
		<!-- RENDERER DECLARATIONS FOR TEMPORALRENDERER -->
		<!-- ////////////////////////////////////////// -->
		<esri:TemporalRenderer id="snowPlowRenderer"
							   latestObservationRenderer="{trackingRenderer}"
							   observationAger="{trackingTimeRampSymbolAger}"
							   observationRenderer="{trackingObservationRenderer}"
							   />
		<!-- ////////////////////////////////////////// -->
		<!-- LATEST OBSERVATION DECLARATIONS -->
		<!-- ////////////////////////////////////////// -->
		<esri:SimpleRenderer id="trackingRenderer" symbol="{trackingCompositeSymbol}"/>
		<esri_stl:TrackingCompositeSymbol id="trackingCompositeSymbol">
			<esri_stl:symbols>
				<s:ArrayCollection>
					<esri_stl:TrackingSymbol id="trackingSymbol"
											 directionAttribute="HEADING"
											 />
					<esri_stl:TrackingLabelSymbol id="trackingLabelSymbol"
												  labelAttribute="VEHICLE_LABEL"
												  labelTextColor="{cssStyleDeclarationGlobal.getStyle('trackingLabelSymbolLabelTextColor')}"
												  labelTextBackgroundColor="{cssStyleDeclarationGlobal.getStyle('trackingLabelSymbolLabelTextBackgroundColor')}"
												  labelTextBackgroundBorderColor="{cssStyleDeclarationGlobal.getStyle('trackingLabelSymbolLabelTextBackgroundBorderColor')}"
												  isLabelBold="true"
												  />

				</s:ArrayCollection>
			</esri_stl:symbols>
		</esri_stl:TrackingCompositeSymbol>
		<!-- ////////////////////////////////////////// -->
		<!-- OBSERVATION AGER DECLARATIONS -->
		<!-- ////////////////////////////////////////// -->
		<esri:TimeRampAger id="trackingTimeRampSymbolAger"
						   alphaRange="{new AlphaRange(_configModel.symbolTimeRampSymbolAgerFromAlpha,_configModel.symbolTimeRampSymbolAgerToAlpha)}"
						   colorRange="{new ColorRange(_configModel.symbolTimeRampSymbolAgerFromColor,_configModel.symbolTimeRampSymbolAgerToColor)}"
						   sizeRange="{new SizeRange(5,11)}"/>
		<!-- ////////////////////////////////////////// -->
		<!-- OBSERVATION RENDERER DECLARATIONS -->
		<!-- ////////////////////////////////////////// -->
		<esri:SimpleRenderer id="trackingObservationRenderer" symbol="{trackingObservationSMS}"/>
		<esri:SimpleMarkerSymbol id="trackingObservationSMS" color="{cssStyleDeclarationGlobal.getStyle('trackingObservationSMSColor')}"
								 alpha="{_configModel.symbolObservationSMSAlpha}"
								 size="{_configModel.symbolObservationSMSSize}"
								 style="{_configModel.symbolObservationSMSStyle}"
								 >
			<esri:SimpleLineSymbol color="{cssStyleDeclarationGlobal.getStyle('trackingObservationSMSOutlineColor')}" width="{_configModel.symbolObservationSMSOutlineWidth}"/>
		</esri:SimpleMarkerSymbol>


	</fx:Declarations>
</s:Group>
